'''
列表的推导和可读性：

把一个字符串变成unicode的码位列表
'''

symbols = '!@#$%^&*()'

# 方式一：
codes = []
for symbol in symbols:
    codes.append(ord(symbol))
print (codes)

# 方式二：
print([ord(symbol) for symbol in symbols])

'''
关于可读性的探讨：

任何学过Python的人，都能够迅速的明白方式一里的for循环的用法，
这里我们使用for循环来构造一个列表。

但是当你对「列表推导」有所了解之后，
你也可以一眼看明白方法二，

相对于方法一来说，方法二的书写方式更加的优雅，并且在某种意义上，这可以帮你了解「生成器表达式」这个打BOSS

关于使用「列表推导」有这样一个原则：
只用列表推导来创建一个新的列表，并且尽量保持简短。

这其中的「度」 则需要自己去慢慢体会和把握了 ！
'''